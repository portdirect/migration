heat_template_version: '2013-05-23'
description: Instance creation template for {{datastore_manager}}
parameters:
  Flavor:
    type: string
  VolumeType:
    type: string
    default: 'GlusterFS'
  VolumeSize:
    type: number
    default : '1'
  InstanceId:
    type: string
  ImageId:
    type: string
  DatastoreManager:
    type: string
  AvailabilityZone:
    type: string
    default: nova
  TenantId:
    type: string
  Harbor_RabbitPassword:
    type: string
    default: 'ZjNmNDkwYjQ5NmZhNDAwYWE5NTBjMTgy'
    hidden: true
  Harbor_RabbitUser:
    type: string
    default: 'rabbitmq'
    hidden: true
  Harbor_RabbitHost:
    type: string
    default: 'murano-messaging.port.direct'
    hidden: true

resources:
  wait_condition:
    type: OS::Heat::WaitCondition
    properties:
      handle: {get_resource: wait_handle}
      count: 1
      timeout: 300

  wait_handle:
    type: OS::Heat::WaitConditionHandle

{% for port in ports %}
  {{ port.name }}:
    type: OS::Neutron::Port
    properties:
      network_id: "{{ port.net_id }}"
      security_groups: [{Ref: DatastoreSG}]
      {% if port.fixed_ip %}
      fixed_ips: [{"ip_address": "{{ port.fixed_ip }}"}]
      {% endif %}
{% endfor %}


  install_harbor_ca:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config: |
        #!/bin/sh
        cat > /etc/pki/ca-trust/source/anchors/ipa.crt << EOF
        -----BEGIN CERTIFICATE-----
        MIIDljCCAn6gAwIBAgIBATANBgkqhkiG9w0BAQsFADA2MRQwEgYDVQQKDAtQT1JU
        LkRJUkVDVDEeMBwGA1UEAwwVQ2VydGlmaWNhdGUgQXV0aG9yaXR5MB4XDTE2MDQw
        MzAwMTUxMVoXDTM2MDQwMzAwMTUxMVowNjEUMBIGA1UECgwLUE9SVC5ESVJFQ1Qx
        HjAcBgNVBAMMFUNlcnRpZmljYXRlIEF1dGhvcml0eTCCASIwDQYJKoZIhvcNAQEB
        BQADggEPADCCAQoCggEBAJ5/cIikfGrkElHkZypN1jHlXjH+LZVvdUh0MHuvfBZe
        USp04AGNIWz4ItoEHckjHdnLNLGiUmR1qfuJLfpmLe4WAhek6zyyWUWyNCvKI6lY
        mBJ1dU7IX0CSsZ/1yn9i8aZO3ikQC3HqXu3xnDNPd92HaGZf+gb4w+LndQhwmDgf
        8+trTqNZ+f8rOHupw1xKJWRyJQ3S2KikDgXG5/D3xbbGFF+T4zKnvZb8r5X2hi7+
        C3pVvAOEMBiJqt4voXh1MXpGAJVCf7bIOJ4LK9YVPsBSj7M+djk4YQxeAlKskXdu
        k0yRhmQzeyy/2UpvVo63f03I36smWY9BJkzeS0f2WVMCAwEAAaOBrjCBqzAfBgNV
        HSMEGDAWgBSeKy+tVJ4PKoFTmMOeClHZJBXYwTAPBgNVHRMBAf8EBTADAQH/MA4G
        A1UdDwEB/wQEAwIBxjAdBgNVHQ4EFgQUnisvrVSeDyqBU5jDngpR2SQV2MEwSAYI
        KwYBBQUHAQEEPDA6MDgGCCsGAQUFBzABhixodHRwOi8vZnJlZWlwYS1tYXN0ZXIu
        cG9ydC5kaXJlY3Q6ODAvY2Evb2NzcDANBgkqhkiG9w0BAQsFAAOCAQEAgp5+EPgT
        kHQ0xIJyzcAnzTpyWuMuZH0ogHlM2r7c+Q3NgGjgDQvmgbKF8/9upJHceV3ujNaA
        86u7u1croUPJlFFA4/kmJYdnaJJmMTBgMRC8Dl65oOw1KpHUQHl9s4NK1URd19Ky
        2MLgpjBzr3FcYw604gxw5QwArzyDIuNZCXSSlGMAxnZq1ymQoOLCS3mfUHnNheVS
        k/ViKzKbFHLX3Oi/lDS9drc7V6fdKiVSPctwsiNU/oqR3EphZudKA0lbRsf/yCdY
        iCkKaD+IeHnniEeuSc6QHu7C2DC+I8LeaktdR+Zk0KmUrG0CV9PaiCUZnIpqIABQ
        +cCYKFnX+jiO7w==
        -----END CERTIFICATE-----
        EOF
        update-ca-trust


  trove_write_config:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        write_files:
{% for file, content in files.iteritems() %}
        - path: {{ file }}
          content: |
            {{ content | indent(12) }}
          mode: '000644'
          owner: root
          group: root
{% endfor %}

  trove_auth_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config:
        str_replace:
          params:
            $Harbor_RabbitHost: {get_param: Harbor_RabbitHost}
            $Harbor_RabbitUser: {get_param: Harbor_RabbitUser}
            $Harbor_RabbitPassword: {get_param: Harbor_RabbitPassword}
          template: |
            #!/bin/bash
            cfg=/etc/trove/trove-guestagent.conf
            crudini --set $cfg oslo_messaging_rabbit rabbit_host "$Harbor_RabbitHost"
            crudini --set $cfg oslo_messaging_rabbit rabbit_userid "$Harbor_RabbitUser"
            crudini --set $cfg oslo_messaging_rabbit rabbit_password "$Harbor_RabbitPassword"

  trove_init_script:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config: |
        #!/bin/sh
        systemctl enable openstack-trove-guestagent
        systemctl start openstack-trove-guestagent


  trove_ready_signal:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config:
        str_replace:
          params:
            wc_notify: { get_attr: ['wait_handle', 'curl_cli'] }
          template: |
            #!/bin/sh
            wc_notify --data-binary '{"status": "SUCCESS"}'


  trove_server_init:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: {get_resource: install_harbor_ca}
      - config: {get_resource: trove_write_config}
      - config: {get_resource: trove_auth_config}
      - config: {get_resource: trove_init_script}
      - config: {get_resource: trove_ready_signal}


  BaseInstance:
    type: OS::Nova::Server
    properties:
      image: {get_param: ImageId}
      flavor: {get_param: Flavor}
      availability_zone: {get_param: AvailabilityZone}
      security_groups: [{get_resource: DatastoreSG}]
      user_data_format: RAW
      user_data: {get_resource: trove_server_init}
      networks:
{% for port in ports %}
        - port: { get_resource: {{ port.name }} }
{% endfor %}

{% if volume_support %}
  DataVolume:
    type: AWS::EC2::Volume
    properties:
      size: {get_param: VolumeSize}
      availability_zone: {get_param: AvailabilityZone}

  MountPoint:
    type: AWS::EC2::VolumeAttachment
    properties:
      InstanceId: {get_resource: BaseInstance}
      VolumeId: {get_resource: DataVolume}
      Device: /dev/vdb
{% endif %}
  DatastoreSG:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Default Security group for {{datastore_manager}}
{% if tcp_rules or udp_rules %}
      rules:
{% for rule in tcp_rules %}
      - direction: "ingress"
        protocol: "tcp"
        port_range_min: "{{rule.from_}}"
        port_range_max: "{{rule.to_}}"
        remote_ip_prefix: "{{rule.cidr}}"
{% endfor %}
{% for rule in udp_rules %}
      - direction: "ingress"
        protocol: "udp"
        port_range_min: "{{rule.from_}}"
        port_range_max: "{{rule.to_}}"
        remote_ip_prefix: "{{rule.cidr}}"
{% endfor %}
{% endif %}
