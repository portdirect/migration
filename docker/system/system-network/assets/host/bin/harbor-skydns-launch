#!/bin/bash
set -e
export PATH=$PATH:/usr/local/bin
#Default settings
: ${SKYDNS_DEV:="br0"}
SKYDNS_IP=$(ip -f inet -o addr show ${SKYDNS_DEV}|cut -d\  -f 7 | cut -d/ -f 1)

if [ "$(hostname -s)" = "master" ] ; then
  ETCD_PREFIX=master-skydns
else
  ETCD_PREFIX=node-skydns
fi
echo "-------------------------------------------------------------------------"
echo "${OS_DISTRO}: SKYDNS: Launching"
echo "-------------------------------------------------------------------------"
/usr/local/bin/harbor-docker stop skydns || true
/usr/local/bin/harbor-docker rm skydns || true
# /usr/local/bin/harbor-docker run \
#       --name skydns \
#       --net=host \
#       -d \
#       --restart=always \
#       docker.io/port/system-skydns:latest \
#           -path-prefix="${ETCD_PREFIX}" \
#           -domain="node.local." \
#           -addr="${SKYDNS_IP}:53" \
#           -nameservers="8.8.8.8:53,8.8.4.4:53"
/usr/local/bin/harbor-docker run \
      --name skydns \
      --net=host \
      -d \
      --restart=always \
      -v /etc/harbor/auth/host:/etc/harbor/auth/host:ro \
      docker.io/port/system-skydns:latest \
          -path-prefix="${ETCD_PREFIX}" \
          -domain="node.local." \
          -addr="${SKYDNS_IP}:53" \
          -machines="https://$(hostname -f):4001" \
          -nameservers="8.8.8.8:53,8.8.4.4:53" \
          -ca-cert="/etc/harbor/auth/host/ca.crt" \
          -tls-key="/etc/harbor/auth/host/host.key" \
          -tls-pem="/etc/harbor/auth/host/host.crt"

echo "-------------------------------------------------------------------------"
echo "${OS_DISTRO}: SKYDNS: testing skydns is responding"
echo "-------------------------------------------------------------------------"
dig +short +time=1 +tries=20 @${SKYDNS_IP}

echo "-------------------------------------------------------------------------"
echo "${OS_DISTRO}: SKYDNS: Updating Resolv.conf"
echo "-------------------------------------------------------------------------"
cat > /etc/resolv.conf << EOF
# Generated by HarborOS SKydns
search $(hostname -d)
nameserver ${SKYDNS_IP}
EOF

echo "-------------------------------------------------------------------------"
echo "${OS_DISTRO}: SKYDNS: watching ETCD for config changes"
echo "-------------------------------------------------------------------------"
etcdctl watch /${ETCD_PREFIX}/config
